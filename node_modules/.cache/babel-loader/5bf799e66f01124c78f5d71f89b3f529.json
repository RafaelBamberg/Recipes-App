{"ast":null,"code":"import getFoodApi from '../../services';\nconst actions = {\n  REQUEST_FOOD_API: 'REQUEST_FOOD_API',\n  SET_FOOD_DATA: 'SET_FOOD_DATA',\n  FAILED_REQUEST: 'FAILED_REQUEST'\n};\nexport const requestApi = () => ({\n  type: actions.REQUEST_FOOD_API\n});\nexport const requestFoodApi = payload => ({\n  type: actions.SET_FOOD_DATA,\n  payload\n});\nexport const failedRequest = error => ({\n  type: actions.FAILED_REQUEST,\n  payload: error\n});\nexport const fetchFoodApi = (payload1, payload2) => async dispatch => {\n  dispatch(requestApi());\n\n  try {\n    const {\n      meals\n    } = await getFoodApi(payload1, payload2);\n    dispatch(requestFoodApi(meals));\n  } catch (error) {\n    dispatch(failedRequest(error.message));\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/home/bamberg/sd-013-b-project-recipes-app/src/redux/actions/index.js"],"names":["getFoodApi","actions","REQUEST_FOOD_API","SET_FOOD_DATA","FAILED_REQUEST","requestApi","type","requestFoodApi","payload","failedRequest","error","fetchFoodApi","payload1","payload2","dispatch","meals","message"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,gBAAvB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,gBAAgB,EAAE,kBADJ;AAEdC,EAAAA,aAAa,EAAE,eAFD;AAGdC,EAAAA,cAAc,EAAE;AAHF,CAAhB;AAMA,OAAO,MAAMC,UAAU,GAAG,OAAO;AAC/BC,EAAAA,IAAI,EAAEL,OAAO,CAACC;AADiB,CAAP,CAAnB;AAIP,OAAO,MAAMK,cAAc,GAAIC,OAAD,KAAc;AAC1CF,EAAAA,IAAI,EAAEL,OAAO,CAACE,aAD4B;AACbK,EAAAA;AADa,CAAd,CAAvB;AAIP,OAAO,MAAMC,aAAa,GAAIC,KAAD,KAAY;AACvCJ,EAAAA,IAAI,EAAEL,OAAO,CAACG,cADyB;AACTI,EAAAA,OAAO,EAAEE;AADA,CAAZ,CAAtB;AAIP,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAOC,QAAP,IAAoB;AACtEA,EAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;;AACA,MAAI;AACF,UAAM;AAAEU,MAAAA;AAAF,QAAY,MAAMf,UAAU,CAACY,QAAD,EAAWC,QAAX,CAAlC;AACAC,IAAAA,QAAQ,CAACP,cAAc,CAACQ,KAAD,CAAf,CAAR;AACD,GAHD,CAGE,OAAOL,KAAP,EAAc;AACdI,IAAAA,QAAQ,CAACL,aAAa,CAACC,KAAK,CAACM,OAAP,CAAd,CAAR;AACD;AACF,CARM;AAUP,eAAef,OAAf","sourcesContent":["import getFoodApi from '../../services';\n\nconst actions = {\n  REQUEST_FOOD_API: 'REQUEST_FOOD_API',\n  SET_FOOD_DATA: 'SET_FOOD_DATA',\n  FAILED_REQUEST: 'FAILED_REQUEST',\n};\n\nexport const requestApi = () => ({\n  type: actions.REQUEST_FOOD_API,\n});\n\nexport const requestFoodApi = (payload) => ({\n  type: actions.SET_FOOD_DATA, payload,\n});\n\nexport const failedRequest = (error) => ({\n  type: actions.FAILED_REQUEST, payload: error,\n});\n\nexport const fetchFoodApi = (payload1, payload2) => async (dispatch) => {\n  dispatch(requestApi());\n  try {\n    const { meals } = await getFoodApi(payload1, payload2);\n    dispatch(requestFoodApi(meals));\n  } catch (error) {\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}