{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/sd-013-b-project-recipes-app/src/components/FavoriteCards.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipBoard from 'clipboard-copy';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport Header from './Header';\nexport default function FavoriteCards(props) {\n  const {\n    recipe,\n    index,\n    onFavoriteClick,\n    handleRedirect\n  } = props;\n  const [copyMessage, setCopyMessage] = useState(false);\n\n  const getCategory = () => {\n    if (recipe.type === 'comida') {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": `${index}-horizontal-top-text`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, `${recipe.area} - ${recipe.category}`);\n    }\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, recipe.alcoholicOrNot);\n  };\n\n  const onShareClick = () => {\n    setCopyMessage(true);\n    const showTime = 1000;\n    let url = `http://localhost:3000/bebidas/${recipe.id}`;\n\n    if (recipe.type === 'comida') {\n      url = `http://localhost:3000/comidas/${recipe.id}`;\n    }\n\n    copyToClipBoard(url);\n    setTimeout(() => {\n      setCopyMessage(false);\n    }, showTime);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"favorite-card\",\n    \"data-testid\": \"favorite-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"card-btn\",\n    onClick: () => handleRedirect(recipe.id, recipe.type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-image`,\n    src: recipe.image,\n    alt: recipe.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, getCategory(), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"card-btn\",\n    onClick: () => handleRedirect(recipe.id, recipe.type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, recipe.name))), copyMessage && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"copy-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 26\n    }\n  }, \"Link copiado!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"card-btn\",\n    onClick: onShareClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"bot\\xE3o de compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"card-btn\",\n    onClick: () => onFavoriteClick(recipe.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    alt: \"bot\\xE3o de favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })))));\n} // aa\n\nFavoriteCards.propTypes = {\n  recipe: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    alcoholicOrNot: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  onFavoriteClick: PropTypes.func.isRequired,\n  handleRedirect: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/bamberg/sd-013-b-project-recipes-app/src/components/FavoriteCards.jsx"],"names":["React","useState","PropTypes","copyToClipBoard","Header","FavoriteCards","props","recipe","index","onFavoriteClick","handleRedirect","copyMessage","setCopyMessage","getCategory","type","area","category","alcoholicOrNot","onShareClick","showTime","url","id","setTimeout","image","name","shareIcon","blackHeartIcon","propTypes","shape","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipBoard from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport Header from './Header';\n\nexport default function FavoriteCards(props) {\n  const { recipe, index, onFavoriteClick, handleRedirect } = props;\n\n  const [copyMessage, setCopyMessage] = useState(false);\n\n  const getCategory = () => {\n    if (recipe.type === 'comida') {\n      return (\n        <p\n          data-testid={ `${index}-horizontal-top-text` }\n        >\n          { `${recipe.area} - ${recipe.category}` }\n        </p>\n      );\n    }\n\n    return (\n      <p\n        data-testid={ `${index}-horizontal-top-text` }\n      >\n        { recipe.alcoholicOrNot }\n      </p>\n    );\n  };\n\n  const onShareClick = () => {\n    setCopyMessage(true);\n    const showTime = 1000;\n    let url = `http://localhost:3000/bebidas/${recipe.id}`;\n    if (recipe.type === 'comida') {\n      url = `http://localhost:3000/comidas/${recipe.id}`;\n    }\n\n    copyToClipBoard(url);\n\n    setTimeout(() => {\n      setCopyMessage(false);\n    }, showTime);\n  };\n\n  return (\n    <section className=\"favorite-card\" data-testid=\"favorite-card\">\n      <Header />\n      <div className=\"image-section\">\n        <button\n          type=\"button\"\n          className=\"card-btn\"\n          onClick={ () => handleRedirect(recipe.id, recipe.type) }\n        >\n          <img\n            data-testid={ `${index}-horizontal-image` }\n            src={ recipe.image }\n            alt={ recipe.name }\n          />\n        </button>\n      </div>\n      <div className=\"info-section\">\n        <div className=\"infos\">\n          { getCategory() }\n          <button\n            type=\"button\"\n            className=\"card-btn\"\n            onClick={ () => handleRedirect(recipe.id, recipe.type) }\n          >\n            <h4 data-testid={ `${index}-horizontal-name` }>{ recipe.name }</h4>\n          </button>\n        </div>\n        { copyMessage && <p className=\"copy-message\">Link copiado!</p> }\n        <div className=\"buttons-section\">\n          <button type=\"button\" className=\"card-btn\" onClick={ onShareClick }>\n            <img\n              data-testid={ `${index}-horizontal-share-btn` }\n              src={ shareIcon }\n              alt=\"botão de compartilhar\"\n            />\n          </button>\n          <button\n            type=\"button\"\n            className=\"card-btn\"\n            onClick={ () => onFavoriteClick(recipe.id) }\n          >\n            <img\n              data-testid={ `${index}-horizontal-favorite-btn` }\n              src={ blackHeartIcon }\n              alt=\"botão de favoritar\"\n            />\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n}\n// aa\nFavoriteCards.propTypes = {\n  recipe: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    alcoholicOrNot: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  onFavoriteClick: PropTypes.func.isRequired,\n  handleRedirect: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}