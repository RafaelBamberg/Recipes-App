{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/Recipes-App/src/components/MadeCards.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipBoard from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport shareIcon from \"../images/shareIcon.svg\";\nexport default class MadeCards extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sharedLink: false\n    };\n    this.shareLink = this.shareLink.bind(this);\n  }\n\n  shareLink(id, type) {\n    const url = window.location.href.replace('/receitas-feitas', `/${type}s/${id}`);\n    copyToClipBoard(url);\n    this.setState({\n      sharedLink: true\n    });\n  }\n\n  render() {\n    const {\n      img,\n      category,\n      name,\n      data,\n      tags,\n      index,\n      id,\n      type,\n      area,\n      alcoholic\n    } = this.props;\n    const {\n      sharedLink\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/${type}s/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: img,\n      alt: \"\",\n      \"data-testid\": `${index}-horizontal-image`,\n      width: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.shareLink(id, type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": `${index}-horizontal-share-btn`,\n      src: shareIcon,\n      alt: \"shareIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })), sharedLink && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"copy-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"Link copiado!\"), /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, `${area} - ${category}`), /*#__PURE__*/React.createElement(Link, {\n      to: `/${type}s/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": `${index}-horizontal-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, name)), alcoholic !== '' && /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }\n    }, alcoholic), /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": `${index}-horizontal-done-date`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, data), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, tags !== '' ? tags.map(tag => /*#__PURE__*/React.createElement(\"span\", {\n      key: tag,\n      \"data-testid\": `${index}-${tag}-horizontal-tag`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, ` #${tag}`)) : ''));\n  }\n\n}\nMadeCards.propTypes = {\n  category: PropTypes.string.isRequired,\n  data: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  index: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  alcoholic: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/bamberg/Recipes-App/src/components/MadeCards.jsx"],"names":["React","Component","PropTypes","copyToClipBoard","Link","MadeCards","constructor","props","state","sharedLink","shareLink","bind","id","type","url","window","location","href","replace","setState","render","img","category","name","data","tags","index","area","alcoholic","shareIcon","map","tag","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipBoard from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\n\nexport default class MadeCards extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sharedLink: false,\n    };\n    this.shareLink = this.shareLink.bind(this);\n  }\n\n  shareLink(id, type) {\n    const url = window.location.href.replace('/receitas-feitas', `/${type}s/${id}`);\n    copyToClipBoard(url);\n    this.setState({ sharedLink: true });\n  }\n\n  render() {\n    const { img, category, name, data, tags, index,\n      id, type, area, alcoholic } = this.props;\n    const { sharedLink } = this.state;\n    return (\n      <div>\n        <Link to={ `/${type}s/${id}` }>\n          <img\n            src={ img }\n            alt=\"\"\n            data-testid={ `${index}-horizontal-image` }\n            width=\"200px\"\n          />\n        </Link>\n        <button\n          type=\"button\"\n          onClick={ () => this.shareLink(id, type) }\n        >\n          <img\n            data-testid={ `${index}-horizontal-share-btn` }\n            src={ shareIcon }\n            alt=\"shareIcon\"\n          />\n        </button>\n        { sharedLink && <p className=\"copy-message\">Link copiado!</p> }\n        <h2\n          data-testid={ `${index}-horizontal-top-text` }\n        >\n          { `${area} - ${category}` }\n        </h2>\n        <Link to={ `/${type}s/${id}` }>\n          <h2 data-testid={ `${index}-horizontal-name` }>{ name }</h2>\n        </Link>\n        { alcoholic !== ''\n          && <span data-testid={ `${index}-horizontal-top-text` }>{ alcoholic }</span> }\n        <h2 data-testid={ `${index}-horizontal-done-date` }>{ data }</h2>\n        <h2>\n          { tags !== '' ? tags.map((tag) => (\n            <span key={ tag } data-testid={ `${index}-${tag}-horizontal-tag` }>\n              { ` #${tag}` }\n            </span>\n          )) : '' }\n        </h2>\n      </div>\n    );\n  }\n}\n\nMadeCards.propTypes = {\n  category: PropTypes.string.isRequired,\n  data: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  index: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  alcoholic: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}