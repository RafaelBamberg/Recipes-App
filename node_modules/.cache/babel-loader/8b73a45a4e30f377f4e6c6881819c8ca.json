{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/Recipes-App/src/pages/ReceipeInProgress.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { confereFavorite, checkIngredientsToButton, redirectToMadeRecipes, adcFavorite, renderCategory, renderIgredients, removeFavorite } from '../components/FunctionsDetails';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport { getDrinksApi, getFoodApi } from '../services';\n\nclass ReceipeInProgress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipe: '',\n      sharedLink: false,\n      favorite: false,\n      checkIngredients: ''\n    };\n    this.shareRecipe = this.shareRecipe.bind(this);\n    this.handleIngredients = this.handleIngredients.bind(this);\n  }\n\n  componentDidMount() {\n    const storageProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const storageFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const storageMade = JSON.parse(localStorage.getItem('doneRecipes'));\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    this.getRecipe(id);\n\n    if (storageProgress) {\n      this.setCheks(storageProgress.value);\n    }\n\n    if (storageFavorites) {\n      this.setFavorite(id);\n    }\n\n    if (!storageFavorites) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n      this.setTeste();\n    }\n\n    if (!storageMade) {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n  }\n\n  componentDidUpdate(s, p) {\n    const {\n      recipe,\n      checkIngredients\n    } = this.state;\n    const tam = document.querySelectorAll('.ingredient-step-list');\n    const storageProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    let value = {};\n\n    if (recipe !== '' && checkIngredients === '' && !storageProgress) {\n      tam.forEach((t, i) => {\n        value = { ...value,\n          [`value${i}`]: false\n        };\n      });\n      this.setCheks(value);\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        recipe,\n        value\n      }));\n    }\n\n    if (recipe !== '' && p.checkIngredients !== checkIngredients) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        recipe,\n        value: checkIngredients\n      }));\n    }\n  }\n\n  handleIngredients(index, target) {\n    this.setState(prevState => ({\n      checkIngredients: { ...prevState.checkIngredients,\n        [`value${index}`]: target.checked\n      }\n    }));\n  }\n\n  setCheks(value) {\n    this.setState({\n      checkIngredients: value\n    });\n  }\n\n  async getRecipe(id) {\n    const {\n      match: {\n        path\n      }\n    } = this.props;\n\n    if (path === '/bebidas/:id/in-progress') {\n      const response2 = await getDrinksApi(`lookup.php?i=${id}`, '');\n      return this.setState({\n        recipe: response2.drinks[0]\n      });\n    }\n\n    const response = await getFoodApi(`lookup.php?i=${id}`, '');\n    return this.setState({\n      recipe: response.meals[0]\n    });\n  }\n\n  setTeste() {\n    this.setState({\n      favorite: false\n    });\n  }\n\n  setFavorite(id) {\n    this.setState({\n      favorite: confereFavorite(id)\n    });\n  }\n\n  shareRecipe() {\n    document.getElementById('link-to-share-progress').select();\n    document.execCommand('copy');\n    this.setState({\n      sharedLink: true\n    });\n  }\n\n  render() {\n    const {\n      recipe,\n      sharedLink,\n      favorite,\n      checkIngredients\n    } = this.state;\n    const {\n      match: {\n        path,\n        params: {\n          id\n        }\n      },\n      history\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"recipe-photo\",\n      src: recipe.strMealThumb ? recipe.strMealThumb : recipe.strDrinkThumb,\n      alt: recipe.strMeal ? recipe.strMeal : recipe.strDrink,\n      width: \"300vw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, recipe.strMeal ? recipe.strMeal : recipe.strDrink), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkShare\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      id: \"link-to-share-progress\",\n      value: window.location.href.replace('/in-progress', ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.shareRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"shareIcon\",\n      \"data-testid\": \"share-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    })), sharedLink ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 24\n      }\n    }, \"Link copiado!\") : '', /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        if (confereFavorite(id) === true) {\n          removeFavorite(recipe);\n          return this.setState({\n            favorite: false\n          });\n        }\n\n        adcFavorite(recipe);\n        return this.setState({\n          favorite: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: favorite ? blackHeartIcon : whiteHeartIcon,\n      alt: \"\",\n      \"data-testid\": \"favorite-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    })), renderCategory(path, recipe), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, \"Igredients\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, renderIgredients(recipe, 'progress', checkIngredients, this.handleIngredients))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"Intructions\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, recipe.strInstructions)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"finish-recipe-btn\",\n      className: \"button-iniciar\",\n      id: \"button-details-child\",\n      disabled: checkIngredientsToButton(checkIngredients),\n      onClick: () => redirectToMadeRecipes(history, recipe),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, \"Finalizar receita\"));\n  }\n\n}\n\nexport default ReceipeInProgress;\nReceipeInProgress.propTypes = {\n  match: PropTypes.objectOf({\n    params: PropTypes.objectOf(PropTypes.string),\n    path: PropTypes.string\n  }).isRequired,\n  history: PropTypes.objectOf(PropTypes.string).isRequired\n};","map":{"version":3,"sources":["/home/bamberg/Recipes-App/src/pages/ReceipeInProgress.jsx"],"names":["React","Component","PropTypes","confereFavorite","checkIngredientsToButton","redirectToMadeRecipes","adcFavorite","renderCategory","renderIgredients","removeFavorite","getDrinksApi","getFoodApi","ReceipeInProgress","constructor","props","state","recipe","sharedLink","favorite","checkIngredients","shareRecipe","bind","handleIngredients","componentDidMount","storageProgress","JSON","parse","localStorage","getItem","storageFavorites","storageMade","match","params","id","getRecipe","setCheks","value","setFavorite","setItem","stringify","setTeste","componentDidUpdate","s","p","tam","document","querySelectorAll","forEach","t","i","index","target","setState","prevState","checked","path","response2","drinks","response","meals","getElementById","select","execCommand","render","history","strMealThumb","strDrinkThumb","strMeal","strDrink","window","location","href","replace","shareIcon","blackHeartIcon","whiteHeartIcon","strInstructions","propTypes","objectOf","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { confereFavorite, checkIngredientsToButton, redirectToMadeRecipes,\n  adcFavorite, renderCategory, renderIgredients, removeFavorite }\n  from '../components/FunctionsDetails';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport { getDrinksApi, getFoodApi } from '../services';\n\nclass ReceipeInProgress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipe: '',\n      sharedLink: false,\n      favorite: false,\n      checkIngredients: '',\n    };\n\n    this.shareRecipe = this.shareRecipe.bind(this);\n    this.handleIngredients = this.handleIngredients.bind(this);\n  }\n\n  componentDidMount() {\n    const storageProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const storageFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const storageMade = JSON.parse(localStorage.getItem('doneRecipes'));\n    const { match: { params: { id } } } = this.props;\n    this.getRecipe(id);\n    if (storageProgress) {\n      this.setCheks(storageProgress.value);\n    }\n    if (storageFavorites) {\n      this.setFavorite(id);\n    }\n    if (!storageFavorites) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n      this.setTeste();\n    }\n    if (!storageMade) {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n  }\n\n  componentDidUpdate(s, p) {\n    const { recipe, checkIngredients } = this.state;\n    const tam = document.querySelectorAll('.ingredient-step-list');\n    const storageProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    let value = {};\n    if (recipe !== '' && checkIngredients === '' && !storageProgress) {\n      tam.forEach((t, i) => {\n        value = {\n          ...value,\n          [`value${i}`]: false,\n        };\n      });\n      this.setCheks(value);\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        recipe,\n        value,\n      }));\n    }\n    if (recipe !== '' && p.checkIngredients !== checkIngredients) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        recipe,\n        value: checkIngredients,\n      }));\n    }\n  }\n\n  handleIngredients(index, target) {\n    this.setState((prevState) => ({\n      checkIngredients: {\n        ...prevState.checkIngredients,\n        [`value${index}`]: target.checked,\n      },\n    }));\n  }\n\n  setCheks(value) {\n    this.setState({\n      checkIngredients: value,\n    });\n  }\n\n  async getRecipe(id) {\n    const { match: { path } } = this.props;\n    if (path === '/bebidas/:id/in-progress') {\n      const response2 = await getDrinksApi(`lookup.php?i=${id}`, '');\n      return this.setState({ recipe: response2.drinks[0] });\n    }\n    const response = await getFoodApi(`lookup.php?i=${id}`, '');\n    return this.setState({ recipe: response.meals[0] });\n  }\n\n  setTeste() {\n    this.setState({ favorite: false });\n  }\n\n  setFavorite(id) {\n    this.setState({ favorite: confereFavorite(id) });\n  }\n\n  shareRecipe() {\n    document.getElementById('link-to-share-progress').select();\n    document.execCommand('copy');\n    this.setState({ sharedLink: true });\n  }\n\n  render() {\n    const { recipe, sharedLink, favorite, checkIngredients } = this.state;\n    const { match: { path, params: { id } }, history } = this.props;\n    return (\n      <div>\n        <img\n          data-testid=\"recipe-photo\"\n          src={ recipe.strMealThumb ? recipe.strMealThumb : recipe.strDrinkThumb }\n          alt={ recipe.strMeal ? recipe.strMeal : recipe.strDrink }\n          width=\"300vw\"\n        />\n        <h1 data-testid=\"recipe-title\">\n          { recipe.strMeal ? recipe.strMeal : recipe.strDrink }\n        </h1>\n        <div className=\"linkShare\">\n          <input\n            type=\"url\"\n            id=\"link-to-share-progress\"\n            value={ window.location.href.replace('/in-progress', '') }\n          />\n        </div>\n        <button\n          type=\"button\"\n          onClick={ this.shareRecipe }\n        >\n          <img src={ shareIcon } alt=\"shareIcon\" data-testid=\"share-btn\" />\n        </button>\n        { sharedLink ? <p>Link copiado!</p> : '' }\n        <button\n          type=\"button\"\n          onClick={ () => {\n            if (confereFavorite(id) === true) {\n              removeFavorite(recipe);\n              return this.setState({ favorite: false });\n            }\n            adcFavorite(recipe);\n            return this.setState({ favorite: true });\n          } }\n        >\n          <img\n            src={ favorite ? blackHeartIcon : whiteHeartIcon }\n            alt=\"\"\n            data-testid=\"favorite-btn\"\n          />\n        </button>\n        { renderCategory(path, recipe) }\n        <div>\n          <h2>Igredients</h2>\n          <ul>\n            { renderIgredients(recipe, 'progress', checkIngredients,\n              this.handleIngredients) }\n          </ul>\n        </div>\n        <div>\n          <h2>Intructions</h2>\n          <span data-testid=\"instructions\">{recipe.strInstructions}</span>\n        </div>\n        <button\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          className=\"button-iniciar\"\n          id=\"button-details-child\"\n          disabled={ checkIngredientsToButton(checkIngredients) }\n          onClick={ () => redirectToMadeRecipes(history, recipe) }\n        >\n          Finalizar receita\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ReceipeInProgress;\n\nReceipeInProgress.propTypes = {\n  match: PropTypes.objectOf({\n    params: PropTypes.objectOf(PropTypes.string),\n    path: PropTypes.string,\n  }).isRequired,\n  history: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}