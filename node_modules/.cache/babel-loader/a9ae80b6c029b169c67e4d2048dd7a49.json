{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/Recipes-App/src/components/CategoriesButton.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDrinksApi, getFoodApi } from '../services';\nimport { filterDrink, filterFood } from '../redux/actions';\nimport '../styles/App.css';\n\nclass CategoriesButton extends Component {\n  constructor() {\n    super();\n    this.state = {\n      response: '',\n      type: '',\n      filterSelect: ''\n    };\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  async componentDidMount() {\n    const {\n      category\n    } = this.props;\n    this.setResponse(category);\n  }\n\n  async setResponse(category) {\n    const requisition = category === 'meals' ? await getFoodApi('list.php?c=list', '') : await getDrinksApi('list.php?c=list', '');\n    return this.setState({\n      response: requisition[category],\n      type: category\n    });\n  }\n\n  async filterCategory({\n    target\n  }) {\n    const {\n      name\n    } = target;\n    const {\n      filterSelect\n    } = this.state;\n    const {\n      type\n    } = this.state;\n\n    if (type === 'meals') {\n      const {\n        filterFoodProps\n      } = this.props;\n\n      if (filterSelect === name || name === 'all') {\n        this.setState({\n          filterSelect: ''\n        });\n        const resp = await getFoodApi('search.php?s=', '');\n        return filterFoodProps(resp.meals);\n      }\n\n      const resp = await getFoodApi(`filter.php?c=${name}`, '');\n      this.setState({\n        filterSelect: name\n      });\n      filterFoodProps(resp.meals);\n    } else {\n      const {\n        filterDrinkProps\n      } = this.props;\n\n      if (filterSelect === name || name === 'all') {\n        this.setState({\n          filterSelect: ''\n        });\n        const resp = await getDrinksApi('search.php?s=', '');\n        return filterDrinkProps(resp.drinks);\n      }\n\n      const resp = await getDrinksApi(`filter.php?c=${name}`, '');\n      this.setState({\n        filterSelect: name\n      });\n      filterDrinkProps(resp.drinks);\n    }\n  }\n\n  renderButton(response) {\n    const four = 4;\n    return response.map((categ, index) => {\n      if (index <= four) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          name: Object.values(categ)[0],\n          type: \"button\",\n          \"data-testid\": `${Object.values(categ)[0]}-category-filter`,\n          key: Object.values(categ)[0],\n          onClick: e => this.filterCategory(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }\n        }, Object.values(categ)[0]);\n      }\n\n      return undefined;\n    });\n  }\n\n  render() {\n    const {\n      response\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Categories\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      name: \"all\",\n      \"data-testid\": \"All-category-filter\",\n      type: \"button\",\n      onClick: e => this.filterCategory(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"All\"), response !== '' ? this.renderButton(response) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 59\n      }\n    }, \" Carregando \"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  foodData: state.foodData.data,\n  drinkData: state.drinkData.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  filterFoodProps: (payload1, payload2) => dispatch(filterFood(payload1, payload2)),\n  filterDrinkProps: (payload1, payload2) => dispatch(filterDrink(payload1, payload2))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesButton);\nCategoriesButton.propTypes = {\n  category: PropTypes.string.isRequired,\n  filterFoodProps: PropTypes.func.isRequired,\n  filterDrinkProps: PropTypes.func.isRequired\n};\n/* async filterAllCategorys({ target }) {\n    const { name } = target;\n    const { filterSelect } = this.state;\n    const { type } = this.state;\n    const arrayCategories = await getFoodApi('list.php?c=list', '');\n    if (type === 'meals') {\n      const { filterFoodProps } = this.props;\n      if (filterSelect === name) {\n        this.setState({ filterSelect: '' });\n        const resp = await getFoodApi('search.php?s=', '');\n        return filterFoodProps(resp.meals);\n      }\n      this.setState({ filterSelect: name });\n      let arrayAllFood = [];\n      arrayCategories.meals.map(async (cat, i) => {\n        const four = 4;\n        if (i <= four) {\n          const resp = await getFoodApi(`filter.php?c=${cat.strCategory}`, '');\n          arrayAllFood = [...arrayAllFood, ...resp.meals];\n          console.log(arrayAllFood);\n        }\n        return undefined;\n      });\n      filterFoodProps(arrayAllFood);\n    }\n  } */","map":{"version":3,"sources":["/home/bamberg/Recipes-App/src/components/CategoriesButton.jsx"],"names":["React","Component","PropTypes","connect","getDrinksApi","getFoodApi","filterDrink","filterFood","CategoriesButton","constructor","state","response","type","filterSelect","renderButton","bind","componentDidMount","category","props","setResponse","requisition","setState","filterCategory","target","name","filterFoodProps","resp","meals","filterDrinkProps","drinks","four","map","categ","index","Object","values","e","undefined","render","mapStateToProps","foodData","data","drinkData","mapDispatchToProps","dispatch","payload1","payload2","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAO,mBAAP;;AAEA,MAAMC,gBAAN,SAA+BP,SAA/B,CAAyC;AACvCQ,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,YAAY,EAAE;AAHH,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,SAAKC,WAAL,CAAiBF,QAAjB;AACD;;AAED,QAAME,WAAN,CAAkBF,QAAlB,EAA4B;AAC1B,UAAMG,WAAW,GAAGH,QAAQ,KAAK,OAAb,GAChB,MAAMZ,UAAU,CAAC,iBAAD,EAAoB,EAApB,CADA,GAEhB,MAAMD,YAAY,CAAC,iBAAD,EAAoB,EAApB,CAFtB;AAIA,WAAO,KAAKiB,QAAL,CAAc;AACnBV,MAAAA,QAAQ,EAAES,WAAW,CAACH,QAAD,CADF;AAEnBL,MAAAA,IAAI,EAAEK;AAFa,KAAd,CAAP;AAID;;AAED,QAAMK,cAAN,CAAqB;AAAEC,IAAAA;AAAF,GAArB,EAAiC;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAWD,MAAjB;AACA,UAAM;AAAEV,MAAAA;AAAF,QAAmB,KAAKH,KAA9B;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,KAAKF,KAAtB;;AACA,QAAIE,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAM;AAAEa,QAAAA;AAAF,UAAsB,KAAKP,KAAjC;;AACA,UAAIL,YAAY,KAAKW,IAAjB,IAAyBA,IAAI,KAAK,KAAtC,EAA6C;AAC3C,aAAKH,QAAL,CAAc;AAAER,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACA,cAAMa,IAAI,GAAG,MAAMrB,UAAU,CAAC,eAAD,EAAkB,EAAlB,CAA7B;AACA,eAAOoB,eAAe,CAACC,IAAI,CAACC,KAAN,CAAtB;AACD;;AACD,YAAMD,IAAI,GAAG,MAAMrB,UAAU,CAAE,gBAAemB,IAAK,EAAtB,EAAyB,EAAzB,CAA7B;AACA,WAAKH,QAAL,CAAc;AAAER,QAAAA,YAAY,EAAEW;AAAhB,OAAd;AACAC,MAAAA,eAAe,CAACC,IAAI,CAACC,KAAN,CAAf;AACD,KAVD,MAUO;AACL,YAAM;AAAEC,QAAAA;AAAF,UAAuB,KAAKV,KAAlC;;AACA,UAAIL,YAAY,KAAKW,IAAjB,IAAyBA,IAAI,KAAK,KAAtC,EAA6C;AAC3C,aAAKH,QAAL,CAAc;AAAER,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACA,cAAMa,IAAI,GAAG,MAAMtB,YAAY,CAAC,eAAD,EAAkB,EAAlB,CAA/B;AACA,eAAOwB,gBAAgB,CAACF,IAAI,CAACG,MAAN,CAAvB;AACD;;AACD,YAAMH,IAAI,GAAG,MAAMtB,YAAY,CAAE,gBAAeoB,IAAK,EAAtB,EAAyB,EAAzB,CAA/B;AACA,WAAKH,QAAL,CAAc;AAAER,QAAAA,YAAY,EAAEW;AAAhB,OAAd;AACAI,MAAAA,gBAAgB,CAACF,IAAI,CAACG,MAAN,CAAhB;AACD;AACF;;AAEDf,EAAAA,YAAY,CAACH,QAAD,EAAW;AACrB,UAAMmB,IAAI,GAAG,CAAb;AACA,WAAOnB,QAAQ,CAACoB,GAAT,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,UAAIA,KAAK,IAAIH,IAAb,EAAmB;AACjB,4BACE;AACE,UAAA,IAAI,EAAGI,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqB,CAArB,CADT;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,yBAAe,GAAEE,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqB,CAArB,CAAwB,kBAH3C;AAIE,UAAA,GAAG,EAAGE,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqB,CAArB,CAJR;AAKE,UAAA,OAAO,EAAII,CAAD,IAAO,KAAKd,cAAL,CAAoBc,CAApB,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOGF,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqB,CAArB,CAPH,CADF;AAWD;;AACD,aAAOK,SAAP;AACD,KAfM,CAAP;AAgBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE3B,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADV,eAEE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,qBAAY,qBAHd;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,OAAO,EAAI0B,CAAD,IAAO,KAAKd,cAAL,CAAoBc,CAApB,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAWIzB,QAAQ,KAAK,EAAb,GAAkB,KAAKG,YAAL,CAAkBH,QAAlB,CAAlB,gBAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXpD,CADF;AAeD;;AA3FsC;;AA8FzC,MAAM4B,eAAe,GAAI7B,KAAD,KAAY;AAClC8B,EAAAA,QAAQ,EAAE9B,KAAK,CAAC8B,QAAN,CAAeC,IADS;AAElCC,EAAAA,SAAS,EAAEhC,KAAK,CAACgC,SAAN,CAAgBD;AAFO,CAAZ,CAAxB;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,eAAe,EAAE,CAACoB,QAAD,EAAWC,QAAX,KAAwBF,QAAQ,CAACrC,UAAU,CAACsC,QAAD,EAAWC,QAAX,CAAX,CADT;AAExClB,EAAAA,gBAAgB,EAAE,CAACiB,QAAD,EAAWC,QAAX,KAAwBF,QAAQ,CAACtC,WAAW,CAACuC,QAAD,EAAWC,QAAX,CAAZ;AAFV,CAAf,CAA3B;;AAKA,eAAe3C,OAAO,CAACoC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CnC,gBAA7C,CAAf;AAEAA,gBAAgB,CAACuC,SAAjB,GAA6B;AAC3B9B,EAAAA,QAAQ,EAAEf,SAAS,CAAC8C,MAAV,CAAiBC,UADA;AAE3BxB,EAAAA,eAAe,EAAEvB,SAAS,CAACgD,IAAV,CAAeD,UAFL;AAG3BrB,EAAAA,gBAAgB,EAAE1B,SAAS,CAACgD,IAAV,CAAeD;AAHN,CAA7B;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDrinksApi, getFoodApi } from '../services';\nimport { filterDrink, filterFood } from '../redux/actions';\nimport '../styles/App.css'\n\nclass CategoriesButton extends Component {\n  constructor() {\n    super();\n    this.state = {\n      response: '',\n      type: '',\n      filterSelect: '',\n    };\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  async componentDidMount() {\n    const { category } = this.props;\n    this.setResponse(category);\n  }\n\n  async setResponse(category) {\n    const requisition = category === 'meals'\n      ? await getFoodApi('list.php?c=list', '')\n      : await getDrinksApi('list.php?c=list', '');\n\n    return this.setState({\n      response: requisition[category],\n      type: category,\n    });\n  }\n\n  async filterCategory({ target }) {\n    const { name } = target;\n    const { filterSelect } = this.state;\n    const { type } = this.state;\n    if (type === 'meals') {\n      const { filterFoodProps } = this.props;\n      if (filterSelect === name || name === 'all') {\n        this.setState({ filterSelect: '' });\n        const resp = await getFoodApi('search.php?s=', '');\n        return filterFoodProps(resp.meals);\n      }\n      const resp = await getFoodApi(`filter.php?c=${name}`, '');\n      this.setState({ filterSelect: name });\n      filterFoodProps(resp.meals);\n    } else {\n      const { filterDrinkProps } = this.props;\n      if (filterSelect === name || name === 'all') {\n        this.setState({ filterSelect: '' });\n        const resp = await getDrinksApi('search.php?s=', '');\n        return filterDrinkProps(resp.drinks);\n      }\n      const resp = await getDrinksApi(`filter.php?c=${name}`, '');\n      this.setState({ filterSelect: name });\n      filterDrinkProps(resp.drinks);\n    }\n  }\n\n  renderButton(response) {\n    const four = 4;\n    return response.map((categ, index) => {\n      if (index <= four) {\n        return (\n          <button\n            name={ Object.values(categ)[0] }\n            type=\"button\"\n            data-testid={ `${Object.values(categ)[0]}-category-filter` }\n            key={ Object.values(categ)[0] }\n            onClick={ (e) => this.filterCategory(e) }\n          >\n            {Object.values(categ)[0]}\n          </button>\n        );\n      }\n      return undefined;\n    });\n  }\n\n  render() {\n    const { response } = this.state;\n    return (\n      <div>\n                <p>Categories</p>\n        <button\n          className=\"button\"\n          name=\"all\"\n          data-testid=\"All-category-filter\"\n          type=\"button\"\n          onClick={ (e) => this.filterCategory(e) }\n        >\n          All\n        </button>\n        { response !== '' ? this.renderButton(response) : <span> Carregando </span> }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodData: state.foodData.data,\n  drinkData: state.drinkData.data,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  filterFoodProps: (payload1, payload2) => dispatch(filterFood(payload1, payload2)),\n  filterDrinkProps: (payload1, payload2) => dispatch(filterDrink(payload1, payload2)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesButton);\n\nCategoriesButton.propTypes = {\n  category: PropTypes.string.isRequired,\n  filterFoodProps: PropTypes.func.isRequired,\n  filterDrinkProps: PropTypes.func.isRequired,\n};\n\n/* async filterAllCategorys({ target }) {\n    const { name } = target;\n    const { filterSelect } = this.state;\n    const { type } = this.state;\n    const arrayCategories = await getFoodApi('list.php?c=list', '');\n    if (type === 'meals') {\n      const { filterFoodProps } = this.props;\n      if (filterSelect === name) {\n        this.setState({ filterSelect: '' });\n        const resp = await getFoodApi('search.php?s=', '');\n        return filterFoodProps(resp.meals);\n      }\n      this.setState({ filterSelect: name });\n      let arrayAllFood = [];\n      arrayCategories.meals.map(async (cat, i) => {\n        const four = 4;\n        if (i <= four) {\n          const resp = await getFoodApi(`filter.php?c=${cat.strCategory}`, '');\n          arrayAllFood = [...arrayAllFood, ...resp.meals];\n          console.log(arrayAllFood);\n        }\n        return undefined;\n      });\n      filterFoodProps(arrayAllFood);\n    }\n  } */\n"]},"metadata":{},"sourceType":"module"}